# Generated by Django 5.2.1 on 2025-05-27 01:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("infrastructure", "0002_remove_clientmodel_photo_url_clientmodel_photo"),
    ]

    operations = [
        migrations.CreateModel(
            name="CategoryModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(max_length=255)),
                (
                    "icon",
                    models.ImageField(blank=True, null=True, upload_to="category_icons/"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlanModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("value", models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name="PortfolioBoosterModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=False)),
                ("period", models.PositiveIntegerField(help_text="Duração em dias")),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="portfolio_boosters",
                        to="infrastructure.planmodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProfessionalModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "client",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="professional",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PortfolioModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(max_length=500)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="portfolio_images/"),
                ),
                (
                    "booster",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="portfolio",
                        to="infrastructure.portfolioboostermodel",
                    ),
                ),
                (
                    "professional",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="portfolio",
                        to="infrastructure.professionalmodel",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="portfolioboostermodel",
            name="professional",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="portfolio_booster",
                to="infrastructure.professionalmodel",
            ),
        ),
        migrations.CreateModel(
            name="ProposalModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("confirmed", models.BooleanField(default=False)),
                ("value", models.DecimalField(decimal_places=2, max_digits=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proposals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "professional",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proposals",
                        to="infrastructure.professionalmodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProposalServiceModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "proposal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proposal_services",
                        to="infrastructure.proposalmodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ReviewModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rating", models.FloatField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "proposal_service",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review",
                        to="infrastructure.proposalservicemodel",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ServiceModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(max_length=255)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="services",
                        to="infrastructure.categorymodel",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="proposalservicemodel",
            name="service",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="proposal_services",
                to="infrastructure.servicemodel",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="proposalservicemodel",
            unique_together={("proposal", "service")},
        ),
        migrations.CreateModel(
            name="PortfolioServiceModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "portfolio",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="portfolio_services",
                        to="infrastructure.portfoliomodel",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="portfolio_services",
                        to="infrastructure.servicemodel",
                    ),
                ),
            ],
            options={
                "unique_together": {("portfolio", "service")},
            },
        ),
    ]
